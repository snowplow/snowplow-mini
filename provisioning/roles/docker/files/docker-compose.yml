version: "3"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.3.1
    container_name: elasticsearch
    restart: always
    environment:
      # Swapping needs to be disabled for performance and node stability
      - "bootstrap.memory_lock=true"
      - ES_JAVA_OPTS=-Xms${ES_JVM_SIZE} -Xmx${ES_JVM_SIZE}
    volumes:
      - /home/ubuntu/snowplow/elasticsearch/data:/usr/share/elasticsearch/data
      - /home/ubuntu/snowplow/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - /home/ubuntu/snowplow/elasticsearch/config/log4j2.properties:/usr/share/elasticsearch/config/log4j2.properties
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    logging:
      options:
        max-size: "50M"
        max-file: "10"
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:6.3.1
    container_name: kibana
    restart: always
    volumes:
      - /home/ubuntu/snowplow/elasticsearch/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  elasticsearch-loader-good:
    image: snowplow-docker-registry.bintray.io/snowplow/elasticsearch-loader:0.12.0-rc4
    container_name: elasticsearch-loader-good
    command: [ "--config", "/snowplow/config/snowplow-es-loader-good.hocon" ]
    restart: always
    depends_on:
      - elasticsearch
    volumes:
      - /home/ubuntu/snowplow/configs:/snowplow/config
    logging:
      options:
        max-size: "1M"
        max-file: "10"
    environment:
      - "SP_JAVA_OPTS=-Xmx${SP_JVM_SIZE}"
  
  elasticsearch-loader-bad:
    image: snowplow-docker-registry.bintray.io/snowplow/elasticsearch-loader:0.12.0-rc4
    container_name: elasticsearch-loader-bad
    command: [ "--config", "/snowplow/config/snowplow-es-loader-bad.hocon" ]
    restart: always
    depends_on:
      - elasticsearch
    volumes:
      - /home/ubuntu/snowplow/configs:/snowplow/config
    logging:
      options:
        max-size: "1M"
        max-file: "10"
    environment:
      - "SP_JAVA_OPTS=-Xmx${SP_JVM_SIZE}"

  nsqlookupd:
    image: nsqio/nsq:v1.0.0-compat
    container_name: nsqlookupd
    command: /nsqlookupd --broadcast-address=nsqlookupd
    restart: always
    logging:
      options:
        max-size: "1M"
        max-file: "10"
    ports:
      - "4160:4160"
      - "4161:4161"

  nsqd:
    image: nsqio/nsq:v1.0.0-compat
    container_name: nsqd
    command: /nsqd --broadcast-address=nsqd --lookupd-tcp-address=nsqlookupd:4160 --data-path=/home/ubuntu/snowplow/nsq-data
    restart: always
    volumes:
      - /home/ubuntu/snowplow/nsq-data:/home/ubuntu/snowplow/nsq-data
    depends_on:
      - nsqlookupd
    ports:
      - "4150:4150"
      - "4151:4151"

  nsqadmin:
    image: nsqio/nsq:v1.0.0-compat
    container_name: nsqadmin
    command: /nsqadmin --lookupd-http-address=nsqlookupd:4161
    restart: always
    depends_on:
      - nsqlookupd
    ports:
      - "4171:4171"

  scala-stream-collector:
    image: snowplow/scala-stream-collector-nsq:1.0.0
    container_name: scala-stream-collector-nsq
    command: [ "--config", "/snowplow/config/snowplow-stream-collector.hocon" ]
    restart: always
    depends_on:
      - nsqd
    ports:
      - "8080:8080"
    volumes:
      - /home/ubuntu/snowplow/configs:/snowplow/config
    logging:
      options:
        max-size: "1M"
        max-file: "10"
    environment:
      - "SP_JAVA_OPTS=-Xmx${SP_JVM_SIZE}"

  stream-enrich:
    image: snowplow/stream-enrich-nsq:1.0.0
    container_name: stream-enrich-nsq
    command: [
      "--config", "/snowplow/config/snowplow-stream-enrich.hocon",
      "--resolver", "file:/snowplow/config/iglu-resolver.json",
      "--enrichments", "file:/snowplow/config/enrichments",
      "--force-cached-files-download"
    ]
    restart: always
    depends_on:
      - scala-stream-collector
    volumes:
      - /home/ubuntu/snowplow/configs:/snowplow/config
    logging:
      options:
        max-size: "1M"
        max-file: "10"
    environment:
      - "SP_JAVA_OPTS=-Xmx${SP_JVM_SIZE}"

  postgres:
    image: postgres:9.5
    container_name: postgres
    restart: always
    volumes:
      - /home/ubuntu/snowplow/init/iglu-server-init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    logging:
      options:
        max-size: "1M"
        max-file: "10"
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust

  iglu-server:
    image: snowplow-docker-registry.bintray.io/snowplow/iglu-server:0.6.0
    container_name: iglu-server
    entrypoint: /snowplow/bin/wait-for-postgres.sh postgres --config /snowplow/config/iglu-server.conf
    restart: always
    depends_on:
      - postgres
    ports:
      - "8081:8081"
    volumes:
      - /home/ubuntu/snowplow/init/wait-for-postgres.sh:/snowplow/bin/wait-for-postgres.sh
      - /home/ubuntu/snowplow/configs:/snowplow/config
    logging:
      options:
        max-size: "1M"
        max-file: "10"
